/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mavenproject2;
import com.formdev.flatlaf.FlatDarkLaf;
import java.awt.Color;
import java.awt.Font;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.OK_CANCEL_OPTION;
import javax.swing.ListModel;
import javax.swing.UIManager;


/**
 *
 * @author youss
 */
public class mainForm extends javax.swing.JFrame {
    SQL sql;
    DefaultListModel<String> listModel = new DefaultListModel<>();
    boolean newTrueUpdatefalse = true;
    int maleBool = 1;
    int currentId = 0;
    /**
     * Creates new form mainForm
     */
    public mainForm() {
        try {
        Font customFont = new Font("Calibri", Font.BOLD, 16);
        UIManager.put("Label.font", customFont);
        UIManager.put("Button.font", customFont);
        UIManager.put("TextField.font", customFont);
        UIManager.put("List.font", customFont);
        UIManager.put("RadioButton.font", customFont);
        UIManager.put("ComboBox.font", customFont);
        this.setTitle("Student Management System Lab i 247349 248801 240487 240787 243723");
        

            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (Exception e) {
            System.err.println("Failed to initialize LaF");
        }
        initComponents();
        this.getContentPane().setBackground(Color.DARK_GRAY);


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        txtId = new javax.swing.JTextField();
        btnNew = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        spnDay = new javax.swing.JSpinner();
        spnMonth = new javax.swing.JSpinner();
        spnYear = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        rdMale = new javax.swing.JRadioButton();
        rdFemale = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        cmbNationality = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        txtYearEn = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtMajor = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstCourses = new javax.swing.JList<>();
        txtAddCourse = new javax.swing.JTextField();
        btnAddCourse = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        txtGpa = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtAttend = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnRemCourse = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(61, 61, 61));
        setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        setMinimumSize(new java.awt.Dimension(1250, 480));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("ID:");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        txtId.setText("jTextField1");

        btnNew.setText("new");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnUpdate.setText("update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel2.setText("name");

        txtName.setText("jTextField2");

        jLabel3.setText("Date of Birth");

        jLabel4.setText("day");

        jLabel5.setText("month");

        jLabel6.setText("year");

        jLabel7.setText("gender");

        rdMale.setText("male");
        rdMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdMaleActionPerformed(evt);
            }
        });

        rdFemale.setText("female");
        rdFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdFemaleActionPerformed(evt);
            }
        });

        jLabel8.setText("Nationality");

        jLabel9.setText("phone :");

        txtPhone.setText("jTextField3");

        jLabel10.setText("email :");

        txtEmail.setText("jTextField4");
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        cmbNationality.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel11.setText("year enrolled");

        txtYearEn.setText("jTextField1");

        jLabel12.setText("major");

        txtMajor.setText("jTextField2");

        jLabel13.setText("courses");

        lstCourses.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstCourses);

        txtAddCourse.setText("jTextField3");

        btnAddCourse.setText("add");
        btnAddCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCourseActionPerformed(evt);
            }
        });

        jLabel14.setText("gpa :");

        txtGpa.setText("jTextField4");

        jLabel15.setText("attendance %");

        txtAttend.setText("jTextField5");

        btnSubmit.setText("submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnPrev.setText("prev");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setText("next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 0, 0));
        btnDelete.setForeground(new java.awt.Color(0, 255, 0));
        btnDelete.setText("delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnRemCourse.setText("remove");
        btnRemCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemCourseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(rdMale))
                                        .addGap(33, 33, 33))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(spnDay, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdFemale)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(spnMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(27, 27, 27)
                                                .addComponent(jLabel6))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(23, 23, 23)
                                                .addComponent(spnYear, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addComponent(txtPhone, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                            .addComponent(txtEmail)
                            .addComponent(cmbNationality, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPrev))
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAttend))
                            .addComponent(btnSubmit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnDelete)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtYearEn, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                                        .addComponent(txtMajor)
                                        .addComponent(jScrollPane1)
                                        .addComponent(txtGpa))))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNext)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 11, Short.MAX_VALUE)
                        .addComponent(btnNew)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAddCourse, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                            .addComponent(txtAddCourse, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                            .addComponent(btnRemCourse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtId)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPrev)
                            .addComponent(btnNext)
                            .addComponent(btnDelete)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtYearEn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(157, 157, 157)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(rdMale, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(txtGpa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel12)
                            .addComponent(txtMajor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(spnDay, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                                    .addComponent(spnMonth)
                                    .addComponent(spnYear)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel13))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtAddCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnAddCourse)
                                        .addGap(8, 8, 8)
                                        .addComponent(btnRemCourse))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbNationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(txtAttend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSubmit)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    boolean dataOnScreen = false;
    
    
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        int rollBackId = currentId;
        currentId = Integer.parseInt(txtId.getText());
        Student s = sql.getStudent(currentId);
        if(s.good()){
            System.out.println("table not empty");
            txtId.setText(Integer.toString(s.id));
            txtName.setText(s.name);
            spnDay.setValue(s.bday);
            spnMonth.setValue(s.bmonth);
            spnYear.setValue(s.byear);
            txtPhone.setText(s.phone);
            txtEmail.setText(s.email);
            txtYearEn.setText(Integer.toString(s.enrYear));
            txtMajor.setText(s.major);
            txtGpa.setText(Double.toString(s.gpa));
            txtAttend.setText(Double.toString(s.attendance));
            lstCourses.setModel(listModel);
            listModel.clear();
            s.parseCourses();//parses courses and saves data in the object
            for(int i = 0; i< s.getCoursesCount(); i++){
                listModel.addElement(s.getCourse(i));
                System.out.println(Integer.toString(i)+ " "+s.getCourse(i));
            }
            rdMale.setSelected(s.genderMale == 1);
            rdFemale.setSelected(s.genderMale!=1);
            dataOnScreen = true;


        }else{//student not good
            System.out.println("table is empty or student not there");
            JOptionPane.showMessageDialog(null, "please enter valid student id", "Message Box", JOptionPane.ERROR_MESSAGE);
            currentId = rollBackId;
            txtId.setText(Integer.toString(currentId));
        }
        btnSubmit.setEnabled(false);
        btnAddCourse.setEnabled(false);
        btnRemCourse.setEnabled(false);
        txtName.setEditable(false);
        txtPhone.setEditable(false);
        txtEmail.setEditable(false);
        txtYearEn.setEditable(false);
        txtMajor.setEditable(false);
        txtGpa.setEditable(false);
        txtAttend.setEditable(false);
        txtAddCourse.setEditable(false);
        btnSubmit.setEnabled(false);
        rdFemale.setSelected(false);
        rdMale.setSelected(true);
        spnDay.setEnabled(false);
        spnMonth.setEnabled(false);
        spnYear.setEnabled(false);
        
        dataOnScreen = true;
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        btnAddCourse.setEnabled(true);
        btnRemCourse.setEnabled(true);
        newTrueUpdatefalse = true;
        btnSubmit.setEnabled(true);
        txtId.setText("");
        txtName.setText("");
        txtName.setEditable(true);
        txtPhone.setText("");
        txtPhone.setEditable(true);
        txtEmail.setText("");
        txtEmail.setEditable(true);
        txtYearEn.setText("");
        txtYearEn.setEditable(true);
        txtMajor.setText("");
        txtMajor.setEditable(true);
        txtGpa.setText("");
        txtGpa.setEditable(true);
        txtAttend.setText("");
        txtAttend.setEditable(true);
        txtAddCourse.setText("");
        txtAddCourse.setEditable(true);
        //cmbNationality.removeAllItems();
        lstCourses.setModel(listModel);
        listModel.clear();
        btnSubmit.setEnabled(true);
        rdFemale.setSelected(false);
        rdMale.setSelected(true);
        spnDay.setValue(1);
        spnMonth.setValue(1);
        spnYear.setValue(2000);
        spnDay.setEnabled(true);
        spnMonth.setEnabled(true);
        spnYear.setEnabled(true);
        dataOnScreen = false;
        
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        currentId++;
        Student s = sql.getStudent(currentId);
        if(s.good()){
            System.out.println("table not empty");
            txtId.setText(Integer.toString(s.id));
            txtName.setText(s.name);
            spnDay.setValue(s.bday);
            spnMonth.setValue(s.bmonth);
            spnYear.setValue(s.byear);
            txtPhone.setText(s.phone);
            txtEmail.setText(s.email);
            txtYearEn.setText(Integer.toString(s.enrYear));
            txtMajor.setText(s.major);
            txtGpa.setText(Double.toString(s.gpa));
            txtAttend.setText(Double.toString(s.attendance));
            lstCourses.setModel(listModel);
            listModel.clear();
            s.parseCourses();//parses courses
            for(int i = 0; i< s.getCoursesCount(); i++){
                listModel.addElement(s.getCourse(i));
                System.out.println(Integer.toString(i)+ " "+s.getCourse(i));
            }
            rdMale.setSelected(s.genderMale == 1);
            rdFemale.setSelected(s.genderMale!=1);
            dataOnScreen = true;


        }else{//student not good
            System.out.println("table is empty or student not there");
            JOptionPane.showMessageDialog(null, "there are no more students", "Message Box", JOptionPane.ERROR_MESSAGE);
        }
        btnSubmit.setEnabled(false);
            btnAddCourse.setEnabled(false);
            btnRemCourse.setEnabled(false);
            txtName.setEditable(false);
            txtPhone.setEditable(false);
            txtEmail.setEditable(false);
            txtYearEn.setEditable(false);
            txtMajor.setEditable(false);
            txtGpa.setEditable(false);
            txtAttend.setEditable(false);
            txtAddCourse.setEditable(false);
            btnSubmit.setEnabled(false);
            rdFemale.setSelected(false);
            rdMale.setSelected(true);
            spnDay.setEnabled(false);
            spnMonth.setEnabled(false);
            spnYear.setEnabled(false);
    }//GEN-LAST:event_btnNextActionPerformed

    private void rdMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdMaleActionPerformed
        // TODO add your handling code here:
        maleBool = 1;
        rdFemale.setSelected(false);
    }//GEN-LAST:event_rdMaleActionPerformed

    private void rdFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdFemaleActionPerformed
        // TODO add your handling code here:
        maleBool = 0;
        rdMale.setSelected(false);
    }//GEN-LAST:event_rdFemaleActionPerformed

    private void btnAddCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCourseActionPerformed
        // TODO add your handling code here:
        listModel.addElement(txtAddCourse.getText());
        txtAddCourse.setText("");
    }//GEN-LAST:event_btnAddCourseActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:
        currentId--;
        Student s = sql.getStudent(currentId);
        if(s.good()){
            System.out.println("table not empty");
            txtId.setText(Integer.toString(s.id));
            txtName.setText(s.name);
            spnDay.setValue(s.bday);
            spnMonth.setValue(s.bmonth);
            spnYear.setValue(s.byear);
            txtPhone.setText(s.phone);
            txtEmail.setText(s.email);
            txtYearEn.setText(Integer.toString(s.enrYear));
            txtMajor.setText(s.major);
            txtGpa.setText(Double.toString(s.gpa));
            txtAttend.setText(Double.toString(s.attendance));
            lstCourses.setModel(listModel);
            listModel.clear();
            s.parseCourses();//parses courses
            for(int i = 0; i< s.getCoursesCount(); i++){
                listModel.addElement(s.getCourse(i));
                System.out.println(Integer.toString(i)+ " "+s.getCourse(i));
            }
            rdMale.setSelected(s.genderMale == 1);
            rdFemale.setSelected(s.genderMale!=1);
            dataOnScreen = true;


        }else{
            System.out.println("table is empty");
            JOptionPane.showMessageDialog(null, "there are no more students", "Message Box", JOptionPane.ERROR_MESSAGE);
        }
        btnSubmit.setEnabled(false);
            btnAddCourse.setEnabled(false);
            btnRemCourse.setEnabled(false);
            txtName.setEditable(false);
            txtPhone.setEditable(false);
            txtEmail.setEditable(false);
            txtYearEn.setEditable(false);
            txtMajor.setEditable(false);
            txtGpa.setEditable(false);
            txtAttend.setEditable(false);
            txtAddCourse.setEditable(false);
            btnSubmit.setEnabled(false);
            rdFemale.setSelected(false);
            rdMale.setSelected(true);
            spnDay.setEnabled(false);
            spnMonth.setEnabled(false);
            spnYear.setEnabled(false);
        
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        Student s = new Student();
        try{
            String id = txtId.getText();
            if(!"".equals(id)){s.id = Integer.parseInt(id);}
            s.name = txtName.getText();
            s.bday = (int)spnDay.getValue();
            s.bmonth = (int)spnMonth.getValue();
            s.byear = (int)spnYear.getValue();
            s.genderMale = maleBool;
            s.nationality = (String)cmbNationality.getSelectedItem();
            s.phone = txtPhone.getText();
            s.email = txtEmail.getText();
            s.enrYear = Integer.parseInt(txtYearEn.getText());
            s.major = txtMajor.getText();
            String courses = "";
            for(int i = 0; i< listModel.getSize(); i++){
                courses+= listModel.get(i)+",";
            }

            String coursesFormated = courses.substring(0, courses.length() - 1);//removes last harmful comma
            s.courses = coursesFormated;
            s.gpa = Double.parseDouble(txtGpa.getText());
            s.attendance = Double.parseDouble(txtAttend.getText());
        }catch(NumberFormatException e){
            System.out.println("error taking input : " + e);
            JOptionPane.showMessageDialog(null, "please enter valid data", "Message Box", JOptionPane.ERROR_MESSAGE);
        }
        if(s.good4Insert()){
            dataOnScreen = true;
            if(newTrueUpdatefalse){//new
                sql.insertStudent(s);
                txtId.setText(Integer.toString(sql.getLastId()));
                JOptionPane.showMessageDialog(null, "student added successfully", "Message Box", JOptionPane.INFORMATION_MESSAGE);
            }else{//update
                try {
                    sql.updateStudent(s);
                    JOptionPane.showMessageDialog(null, "student updated successfully", "Message Box", JOptionPane.INFORMATION_MESSAGE);
                } catch (SQLException ex) {
                    Logger.getLogger( "update student "+mainForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            s.print();
            btnSubmit.setEnabled(false);
            btnAddCourse.setEnabled(false);
            btnRemCourse.setEnabled(false);
            txtName.setEditable(false);
            txtPhone.setEditable(false);
            txtEmail.setEditable(false);
            txtYearEn.setEditable(false);
            txtMajor.setEditable(false);
            txtGpa.setEditable(false);
            txtAttend.setEditable(false);
            txtAddCourse.setEditable(false);
            btnSubmit.setEnabled(false);
            rdFemale.setSelected(false);
            rdMale.setSelected(true);
            spnDay.setEnabled(false);
            spnMonth.setEnabled(false);
            spnYear.setEnabled(false);
            
        }else{
            JOptionPane.showMessageDialog(null, "Please Enter Data correctly with correct feilds", "Message Box", JOptionPane.ERROR_MESSAGE);
        }
        
       
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        btnAddCourse.setEnabled(false);
        btnRemCourse.setEnabled(false);
        txtId.setText("");
        //txtId.setEditable(false);
        txtName.setText("");
        txtName.setEditable(false);
        txtPhone.setText("");
        txtPhone.setEditable(false);
        txtEmail.setText("");
        txtEmail.setEditable(false);
        txtYearEn.setText("");
        txtYearEn.setEditable(false);
        txtMajor.setText("");
        txtMajor.setEditable(false);
        txtGpa.setText("");
        txtGpa.setEditable(false);
        txtAttend.setText("");
        txtAttend.setEditable(false);
        txtAddCourse.setText("");
        txtAddCourse.setEditable(false);
        cmbNationality.removeAllItems();
        lstCourses.setModel(listModel);
        listModel.clear();
        btnSubmit.setEnabled(false);
        rdFemale.setSelected(false);
        rdMale.setSelected(true);
        spnDay.setEnabled(false);
        spnMonth.setEnabled(false);
        spnYear.setEnabled(false);
        
        sql = new SQL();
        if(!sql.tableThere()){
            sql.CreateStudentTable();
            System.out.println("table created");
        }else{
           System.out.println("table is already there"); 
        }
        int firstId = sql.getFirstId();
        if(firstId != 0){//database not empty
            currentId = firstId;
            Student s = sql.getStudent(firstId);
            if(s.good()){
                System.out.println("table not empty");
                txtId.setText(Integer.toString(s.id));
                txtName.setText(s.name);
                spnDay.setValue(s.bday);
                spnMonth.setValue(s.bmonth);
                spnYear.setValue(s.byear);
                txtPhone.setText(s.phone);
                txtEmail.setText(s.email);
                txtYearEn.setText(Integer.toString(s.enrYear));
                txtMajor.setText(s.major);
                txtGpa.setText(Double.toString(s.gpa));
                txtAttend.setText(Double.toString(s.attendance));
                lstCourses.setModel(listModel);
                listModel.clear();
                s.parseCourses();//parses courses
                for(int i = 0; i< s.getCoursesCount(); i++){
                    listModel.addElement(s.getCourse(i));
                    System.out.println(Integer.toString(i)+ " "+s.getCourse(i));
                }
                rdMale.setSelected(s.genderMale == 1);
                rdFemale.setSelected(s.genderMale!=1);
                dataOnScreen = true;


            }else{
                System.out.println("table is empty");
                JOptionPane.showMessageDialog(null, "student data in table is corrupted please make new database", "Message Box", JOptionPane.ERROR_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "database is empty try adding new student", "Message Box", JOptionPane.ERROR_MESSAGE);
        }
        rdFemale.setSelected(false);
        cmbNationality.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Egypt", "Soaudi Arabia", "Jordon" }));
        
    }//GEN-LAST:event_formWindowOpened

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try{
            int id = Integer.parseInt(txtId.getText());
            Student s = sql.getStudent(id);
            if(!s.good()){//if student data is not good (it is not there) 
                JOptionPane.showMessageDialog(null, "student not found", "Message Box", JOptionPane.ERROR_MESSAGE);             
            }else{
                int res = JOptionPane.showConfirmDialog(null, "you are going to delete " + s.name, "Message Box", JOptionPane.ERROR_MESSAGE, JOptionPane.OK_CANCEL_OPTION);
                if(res != JOptionPane.CANCEL_OPTION){//if user didnot cancel we delete the student
                    sql.deleteStudent(id);
                    
                    //clear screen
                    txtId.setText("");
                    btnAddCourse.setEnabled(false);
                    btnRemCourse.setEnabled(false);
                    //txtId.setEditable(false);
                    txtName.setText("");
                    txtName.setEditable(false);
                    txtPhone.setText("");
                    txtPhone.setEditable(false);
                    txtEmail.setText("");
                    txtEmail.setEditable(false);
                    txtYearEn.setText("");
                    txtYearEn.setEditable(false);
                    txtMajor.setText("");
                    txtMajor.setEditable(false);
                    txtGpa.setText("");
                    txtGpa.setEditable(false);
                    txtAttend.setText("");
                    txtAttend.setEditable(false);
                    txtAddCourse.setText("");
                    txtAddCourse.setEditable(false);
                    cmbNationality.removeAllItems();
                    lstCourses.setModel(listModel);
                    listModel.clear();
                    btnSubmit.setEnabled(false);
                    rdFemale.setSelected(false);
                    rdMale.setSelected(true);
                    spnDay.setEnabled(false);
                    spnMonth.setEnabled(false);
                    spnYear.setEnabled(false);
                    dataOnScreen = false;
                    
                }
            }
            
        }catch(HeadlessException | NumberFormatException e){
            JOptionPane.showMessageDialog(null, "please Enter valid id", "Message Box", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if(dataOnScreen){
            newTrueUpdatefalse = false;
            btnSubmit.setEnabled(true);
            btnAddCourse.setEnabled(true);
            btnRemCourse.setEnabled(true);
            txtName.setEditable(true);
            txtPhone.setEditable(true);
            txtEmail.setEditable(true);
            txtYearEn.setEditable(true);
            txtMajor.setEditable(true);
            txtGpa.setEditable(true);
            txtAttend.setEditable(true);
            txtAddCourse.setEditable(true);
            btnSubmit.setEnabled(true);
            rdFemale.setSelected(false);
            rdMale.setSelected(true);
            spnDay.setEnabled(true);
            spnMonth.setEnabled(true);
            spnYear.setEnabled(true);
        }else{
            JOptionPane.showMessageDialog(null, "please Search for valid student first", "Message Box", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnRemCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemCourseActionPerformed
        // TODO add your handling code here:
        if(listModel.removeElement(txtAddCourse.getText())){
            txtAddCourse.setText("");
        }else{
            JOptionPane.showMessageDialog(null, "Please make sure you did not make a typo", "Message Box", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnRemCourseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCourse;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnRemCourse;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbNationality;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lstCourses;
    private javax.swing.JRadioButton rdFemale;
    private javax.swing.JRadioButton rdMale;
    private javax.swing.JSpinner spnDay;
    private javax.swing.JSpinner spnMonth;
    private javax.swing.JSpinner spnYear;
    private javax.swing.JTextField txtAddCourse;
    private javax.swing.JTextField txtAttend;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtGpa;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtMajor;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtYearEn;
    // End of variables declaration//GEN-END:variables

    


}
